# GitHub Actions 优化的 Dockerfile
FROM node:18-alpine AS builder

# 设置工作目录
WORKDIR /app

# 安装构建工具
RUN apk add --no-cache git python3 make g++

# 设置环境变量
ENV NODE_OPTIONS="--max-old-space-size=4096"
ENV CI=false
ENV NODE_ENV=production

# 复制package.json文件
COPY package*.json ./
COPY client/package*.json ./client/

# 安装依赖
RUN npm ci --no-audit --no-fund --prefer-offline
RUN cd client && npm ci --no-audit --no-fund --prefer-offline

# 复制源代码
COPY . .

# 调试：检查复制的文件
RUN echo "=== Checking copied files ===" && \
    ls -la && \
    echo "=== Client directory ===" && \
    ls -la client/ && \
    echo "=== Client public directory ===" && \
    ls -la client/public/ && \
    echo "=== Public directory contents ===" && \
    find client/public -type f

# 构建客户端
RUN cd client && \
    echo "=== Build environment ===" && \
    node --version && \
    npm --version && \
    echo "NODE_OPTIONS: $NODE_OPTIONS" && \
    echo "CI: $CI" && \
    echo "NODE_ENV: $NODE_ENV" && \
    echo "=== Starting build ===" && \
    npm run build

# 验证构建结果
RUN echo "=== Build verification ===" && \
    ls -la client/build/ && \
    echo "Build completed successfully"

# 生产阶段
FROM node:18-alpine AS production

# 创建非root用户
RUN addgroup -g 1001 -S nodejs && \
    adduser -S cloudimgs -u 1001

# 设置工作目录
WORKDIR /app

# 从构建阶段复制文件
COPY --from=builder --chown=cloudimgs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=cloudimgs:nodejs /app/package*.json ./
COPY --from=builder --chown=cloudimgs:nodejs /app/server ./server
COPY --from=builder --chown=cloudimgs:nodejs /app/config.js ./
COPY --from=builder --chown=cloudimgs:nodejs /app/client/build ./client/build

# 创建必要的目录
RUN mkdir -p uploads logs && \
    chown -R cloudimgs:nodejs uploads logs

# 切换到非root用户
USER cloudimgs

# 暴露端口
EXPOSE 3001

# 设置环境变量
ENV NODE_ENV=production
ENV PORT=3001
ENV STORAGE_PATH=/app/uploads

# 启动应用
CMD ["npm", "start"] 